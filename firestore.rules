/**
 * @fileoverview Firestore Security Rules for ACIM Association.
 *
 * Core Philosophy:
 * This ruleset prioritizes simplicity and ease of access for prototyping.
 * All read and write operations are currently permitted for all authenticated users.
 * This is NOT a secure configuration for production and should be updated immediately.
 *
 * Data Structure:
 * - /members/{memberId}: Stores member data.
 * - /members/{memberId}/transactions/{transactionId}: Stores transaction data for a member.
 * - /eventModels/{eventModelId}: Stores event model data.
 * - /members/{memberId}/eventRegistrations/{eventRegistrationId}: Stores event registration data.
 * - /candleSaleModels/{candleSaleModelId}: Stores candle sale model data.
 * - /members/{memberId}/candleSales/{candleSaleId}: Stores candle sale data.
 * - /shopProducts/{shopProductId}: Stores shop product data.
 * - /shopSales/{shopSaleId}: Stores shop sale data.
 * - /cerfas/{cerfaId}: Stores CERFA receipt data.
 * - /roles_admin/{userId}: Stores admin roles.
 * - /appSettings/cerfaCounters: Stores CERFA counters.
 *
 * Key Security Decisions:
 * - All authenticated users can read and write all data.
 * - No schema validation is performed.
 *
 * WARNING: This ruleset is for rapid prototyping ONLY and is NOT secure for production use.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read and write member data.
     * @path /members/{memberId}
     * @allow (create) - Any authenticated user can create a member.
     * @allow (read) - Any authenticated user can read a member.
     * @allow (update) - Any authenticated user can update a member.
     * @allow (delete) - Any authenticated user can delete a member.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write member data.
     */
    match /members/{memberId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write transaction data for a member.
     * @path /members/{memberId}/transactions/{transactionId}
     * @allow (create) - Any authenticated user can create a transaction.
     * @allow (read) - Any authenticated user can read a transaction.
     * @allow (update) - Any authenticated user can update a transaction.
     * @allow (delete) - Any authenticated user can delete a transaction.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write transaction data.
     */
    match /members/{memberId}/transactions/{transactionId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write event model data.
     * @path /eventModels/{eventModelId}
     * @allow (create) - Any authenticated user can create an event model.
     * @allow (read) - Any authenticated user can read an event model.
     * @allow (update) - Any authenticated user can update an event model.
     * @allow (delete) - Any authenticated user can delete an event model.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write event model data.
     */
    match /eventModels/{eventModelId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write event registration data for a member.
     * @path /members/{memberId}/eventRegistrations/{eventRegistrationId}
     * @allow (create) - Any authenticated user can create an event registration.
     * @allow (read) - Any authenticated user can read an event registration.
     * @allow (update) - Any authenticated user can update an event registration.
     * @allow (delete) - Any authenticated user can delete an event registration.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write event registration data.
     */
    match /members/{memberId}/eventRegistrations/{eventRegistrationId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write candle sale model data.
     * @path /candleSaleModels/{candleSaleModelId}
     * @allow (create) - Any authenticated user can create a candle sale model.
     * @allow (read) - Any authenticated user can read a candle sale model.
     * @allow (update) - Any authenticated user can update a candle sale model.
     * @allow (delete) - Any authenticated user can delete a candle sale model.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write candle sale model data.
     */
    match /candleSaleModels/{candleSaleModelId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write candle sale data for a member.
     * @path /members/{memberId}/candleSales/{candleSaleId}
     * @allow (create) - Any authenticated user can create a candle sale.
     * @allow (read) - Any authenticated user can read a candle sale.
     * @allow (update) - Any authenticated user can update a candle sale.
     * @allow (delete) - Any authenticated user can delete a candle sale.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write candle sale data.
     */
    match /members/{memberId}/candleSales/{candleSaleId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write shop product data.
     * @path /shopProducts/{shopProductId}
     * @allow (create) - Any authenticated user can create a shop product.
     * @allow (read) - Any authenticated user can read a shop product.
     * @allow (update) - Any authenticated user can update a shop product.
     * @allow (delete) - Any authenticated user can delete a shop product.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write shop product data.
     */
    match /shopProducts/{shopProductId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write shop sale data.
     * @path /shopSales/{shopSaleId}
     * @allow (create) - Any authenticated user can create a shop sale.
     * @allow (read) - Any authenticated user can read a shop sale.
     * @allow (update) - Any authenticated user can update a shop sale.
     * @allow (delete) - Any authenticated user can delete a shop sale.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write shop sale data.
     */
    match /shopSales/{shopSaleId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write CERFA receipt data.
     * @path /cerfas/{cerfaId}
     * @allow (create) - Any authenticated user can create a CERFA receipt.
     * @allow (read) - Any authenticated user can read a CERFA receipt.
     * @allow (update) - Any authenticated user can update a CERFA receipt.
     * @allow (delete) - Any authenticated user can delete a CERFA receipt.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write CERFA receipt data.
     */
    match /cerfas/{cerfaId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write admin roles data.
     * @path /roles_admin/{userId}
     * @allow (create) - Any authenticated user can create an admin role.
     * @allow (read) - Any authenticated user can read an admin role.
     * @allow (update) - Any authenticated user can update an admin role.
     * @allow (delete) - Any authenticated user can delete an admin role.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write admin roles data.
     */
    match /roles_admin/{userId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write CERFA counters data.
     * @path /appSettings/cerfaCounters
     * @allow (create) - Any authenticated user can create CERFA counters.
     * @allow (read) - Any authenticated user can read CERFA counters.
     * @allow (update) - Any authenticated user can update CERFA counters.
     * @allow (delete) - Any authenticated user can delete CERFA counters.
     * @deny (create) - Never.
     * @principle Allows anyone to read and write CERFA counters data.
     */
    match /appSettings/cerfaCounters {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}